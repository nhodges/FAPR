<?php

	/* Author: Nuri Hodges
	   Script: class_posts.php - provides the mechanisms to access the post database, and eventually add to it.
	----------------------------------------------------------------------------------------------------------- */

	class fapr_posts {

		public function __construct($directory) {

			$this->directory = $directory;

		}

		public function fetch($granularity = NULL) {

			switch($granularity) {

				case is_numeric($granularity):

					return $this->_fapr_fetch_post($granularity);

					break;

				case 'recent':

					return $this->_fapr_fetch_posts();

					break;

				default:

					return 'FAILURE: Invalid request!';

			}

		}

		private function _fapr_fetch_post($granularity) {

			$post_path = $this->directory . 'posts/' . $granularity . '.txt';

			if(file_exists($post_path)) {

				$post_tmp = array();
				$post_raw = file($post_path);

				# Grab post name and generate link (first line)
				$post_tmp['name'] = $post_raw[0];
				$post_tmp['link'] = strtolower(trim(preg_replace('/[^A-Za-z0-9\-]/', '', str_replace(' ', '-', $post_raw[0])), '-'));

				unset($post_raw[0]); $post_raw = array_values($post_raw);

				$post_tmp['body'] = nl2br(implode("\r\n", $post_raw));

				return $post_tmp;

			} else {

				return 'FAILURE: Post does not exist!';

			}

		}

		private function _fapr_fetch_posts($post_limit = NULL) {

			$fapr_count = 0;
			$fapr_posts = array();

			# Loop through all text files in provided directory
			foreach(array_reverse(glob($this->directory . "posts/*.txt")) as $filename) {

				$filename_parts = explode(".", (strstr($filename, '/') ? end(explode('/', $filename)) : $filename));

				# Check for posts generated by FAPR
				if(count($filename_parts) == 2 && is_numeric(reset($filename_parts)) && end($filename_parts) == 'txt') {

					$post_tmp = array();
					$post_raw = file($filename);

					# Grab post date and name; then generate link (first line)
					$post_tmp['date'] = reset($filename_parts);
					$post_tmp['name'] = $post_raw[0];
					$post_tmp['link'] = 'posts/' . reset($filename_parts) . '-' . strtolower(trim(preg_replace('/[^A-Za-z0-9\-]/', '', str_replace(' ', '-', $post_raw[0])), '-'));

					unset($post_raw[0]); $post_raw = array_values($post_raw);

					$post_tmp['body'] = nl2br(implode("\r\n", $post_raw));

					$fapr_posts[] = $post_tmp;

				}

				$fapr_count++; if(!is_numeric($post_limit)) { $post_limit = 5; } if($fapr_count >= $post_limit) { break; }

			}

			if(empty($fapr_posts)) {

				return false;

			} else {

				return $fapr_posts;

			}

		}

	}

?>